1. Django models are a way of working with data in a Django web application. They are Python classes that define the structure and behaviour of the data you want to store in a database. They also provide an easy and intuitive way to query and manipulate the data using the Django ORM (Object-Relational Mapper).

Some of the benefits of using Django models are:

* You can write your models in pure Python code, without having to write any SQL statements or deal with the low-level details of the database.
* You can use the same models across different database backends, such as SQLite, PostgreSQL, MySQL, etc. Django will automatically generate the appropriate SQL commands for each database.
* You can use the Django admin interface to create, update, delete, and search the data in your models, without having to write any code.
* You can use the Django migrations system to manage the changes in your models over time, and apply them to the database in a consistent and reliable way.

2. Tests save time as I will not need to repeatedly check everything manually as I make changes to the recipe app. It also prevents problems from occurring as I am able to determine what requirements and expected results are from inception. Writing test help cover minute details of the recipe app and make the code more trustworthy and reliable. It will also protect the app from being broken if someone else works on it. Tests are a great way of documenting my code and detail how the code is expected to behave.
